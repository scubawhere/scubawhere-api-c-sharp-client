/* 
 * Scubawhere API Documentation
 *
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PaymentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PaymentApiTests
    {
        private PaymentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PaymentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PaymentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PaymentApi
            //Assert.IsInstanceOfType(typeof(PaymentApi), instance, "instance is a PaymentApi");
        }

        
        /// <summary>
        /// Test AddPayment
        /// </summary>
        [Test]
        public void AddPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? bookingId = null;
            //long? paymentgatewayId = null;
            //float? amount = null;
            //var response = instance.AddPayment(bookingId, paymentgatewayId, amount);
            //Assert.IsInstanceOf<InlineResponse2011> (response, "response is InlineResponse2011");
        }
        
        /// <summary>
        /// Test FilterPayments
        /// </summary>
        [Test]
        public void FilterPaymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? after = null;
            //DateTime? before = null;
            //var response = instance.FilterPayments(after, before);
            //Assert.IsInstanceOf<InlineResponse20035> (response, "response is InlineResponse20035");
        }
        
        /// <summary>
        /// Test GetAllPayments
        /// </summary>
        [Test]
        public void GetAllPaymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllPayments();
            //Assert.IsInstanceOf<List<Payment>> (response, "response is List<Payment>");
        }
        
        /// <summary>
        /// Test GetPayment
        /// </summary>
        [Test]
        public void GetPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetPayment(id);
            //Assert.IsInstanceOf<InlineResponse20034> (response, "response is InlineResponse20034");
        }
        
        /// <summary>
        /// Test GetPaymentGateways
        /// </summary>
        [Test]
        public void GetPaymentGatewaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPaymentGateways();
            //Assert.IsInstanceOf<InlineResponse20036> (response, "response is InlineResponse20036");
        }
        
    }

}
