/* 
 * Scubawhere API Documentation
 *
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20040
    /// </summary>
    [DataContract]
    public partial class InlineResponse20040 :  IEquatable<InlineResponse20040>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20040" /> class.
        /// </summary>
        /// <param name="Daterange">Daterange.</param>
        /// <param name="Accommodations">Accommodations.</param>
        /// <param name="AccommodationToal">AccommodationToal.</param>
        /// <param name="Addons">Addons.</param>
        /// <param name="AddonsToal">AddonsToal.</param>
        /// <param name="Courses">Courses.</param>
        /// <param name="CoursesToal">CoursesToal.</param>
        /// <param name="Fees">Fees.</param>
        /// <param name="FeesToal">FeesToal.</param>
        /// <param name="Packages">Packages.</param>
        /// <param name="PackageToal">PackageToal.</param>
        /// <param name="Tickets">Tickets.</param>
        /// <param name="TicketToal">TicketToal.</param>
        public InlineResponse20040(DateRange Daterange = null, ReportEntry Accommodations = null, ReportEntryTotal AccommodationToal = null, ReportEntry Addons = null, ReportEntryTotal AddonsToal = null, ReportEntry Courses = null, ReportEntryTotal CoursesToal = null, ReportEntry Fees = null, ReportEntryTotal FeesToal = null, ReportEntry Packages = null, ReportEntryTotal PackageToal = null, ReportEntry Tickets = null, ReportEntryTotal TicketToal = null)
        {
            this.Daterange = Daterange;
            this.Accommodations = Accommodations;
            this.AccommodationToal = AccommodationToal;
            this.Addons = Addons;
            this.AddonsToal = AddonsToal;
            this.Courses = Courses;
            this.CoursesToal = CoursesToal;
            this.Fees = Fees;
            this.FeesToal = FeesToal;
            this.Packages = Packages;
            this.PackageToal = PackageToal;
            this.Tickets = Tickets;
            this.TicketToal = TicketToal;
        }
        
        /// <summary>
        /// Gets or Sets Daterange
        /// </summary>
        [DataMember(Name="daterange", EmitDefaultValue=false)]
        public DateRange Daterange { get; set; }
        /// <summary>
        /// Gets or Sets Accommodations
        /// </summary>
        [DataMember(Name="accommodations", EmitDefaultValue=false)]
        public ReportEntry Accommodations { get; set; }
        /// <summary>
        /// Gets or Sets AccommodationToal
        /// </summary>
        [DataMember(Name="accommodation_toal", EmitDefaultValue=false)]
        public ReportEntryTotal AccommodationToal { get; set; }
        /// <summary>
        /// Gets or Sets Addons
        /// </summary>
        [DataMember(Name="addons", EmitDefaultValue=false)]
        public ReportEntry Addons { get; set; }
        /// <summary>
        /// Gets or Sets AddonsToal
        /// </summary>
        [DataMember(Name="addons_toal", EmitDefaultValue=false)]
        public ReportEntryTotal AddonsToal { get; set; }
        /// <summary>
        /// Gets or Sets Courses
        /// </summary>
        [DataMember(Name="courses", EmitDefaultValue=false)]
        public ReportEntry Courses { get; set; }
        /// <summary>
        /// Gets or Sets CoursesToal
        /// </summary>
        [DataMember(Name="courses_toal", EmitDefaultValue=false)]
        public ReportEntryTotal CoursesToal { get; set; }
        /// <summary>
        /// Gets or Sets Fees
        /// </summary>
        [DataMember(Name="fees", EmitDefaultValue=false)]
        public ReportEntry Fees { get; set; }
        /// <summary>
        /// Gets or Sets FeesToal
        /// </summary>
        [DataMember(Name="fees_toal", EmitDefaultValue=false)]
        public ReportEntryTotal FeesToal { get; set; }
        /// <summary>
        /// Gets or Sets Packages
        /// </summary>
        [DataMember(Name="packages", EmitDefaultValue=false)]
        public ReportEntry Packages { get; set; }
        /// <summary>
        /// Gets or Sets PackageToal
        /// </summary>
        [DataMember(Name="package_toal", EmitDefaultValue=false)]
        public ReportEntryTotal PackageToal { get; set; }
        /// <summary>
        /// Gets or Sets Tickets
        /// </summary>
        [DataMember(Name="tickets", EmitDefaultValue=false)]
        public ReportEntry Tickets { get; set; }
        /// <summary>
        /// Gets or Sets TicketToal
        /// </summary>
        [DataMember(Name="ticket_toal", EmitDefaultValue=false)]
        public ReportEntryTotal TicketToal { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20040 {\n");
            sb.Append("  Daterange: ").Append(Daterange).Append("\n");
            sb.Append("  Accommodations: ").Append(Accommodations).Append("\n");
            sb.Append("  AccommodationToal: ").Append(AccommodationToal).Append("\n");
            sb.Append("  Addons: ").Append(Addons).Append("\n");
            sb.Append("  AddonsToal: ").Append(AddonsToal).Append("\n");
            sb.Append("  Courses: ").Append(Courses).Append("\n");
            sb.Append("  CoursesToal: ").Append(CoursesToal).Append("\n");
            sb.Append("  Fees: ").Append(Fees).Append("\n");
            sb.Append("  FeesToal: ").Append(FeesToal).Append("\n");
            sb.Append("  Packages: ").Append(Packages).Append("\n");
            sb.Append("  PackageToal: ").Append(PackageToal).Append("\n");
            sb.Append("  Tickets: ").Append(Tickets).Append("\n");
            sb.Append("  TicketToal: ").Append(TicketToal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as InlineResponse20040);
        }

        /// <summary>
        /// Returns true if InlineResponse20040 instances are equal
        /// </summary>
        /// <param name="other">Instance of InlineResponse20040 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20040 other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Daterange == other.Daterange ||
                    this.Daterange != null &&
                    this.Daterange.Equals(other.Daterange)
                ) && 
                (
                    this.Accommodations == other.Accommodations ||
                    this.Accommodations != null &&
                    this.Accommodations.Equals(other.Accommodations)
                ) && 
                (
                    this.AccommodationToal == other.AccommodationToal ||
                    this.AccommodationToal != null &&
                    this.AccommodationToal.Equals(other.AccommodationToal)
                ) && 
                (
                    this.Addons == other.Addons ||
                    this.Addons != null &&
                    this.Addons.Equals(other.Addons)
                ) && 
                (
                    this.AddonsToal == other.AddonsToal ||
                    this.AddonsToal != null &&
                    this.AddonsToal.Equals(other.AddonsToal)
                ) && 
                (
                    this.Courses == other.Courses ||
                    this.Courses != null &&
                    this.Courses.Equals(other.Courses)
                ) && 
                (
                    this.CoursesToal == other.CoursesToal ||
                    this.CoursesToal != null &&
                    this.CoursesToal.Equals(other.CoursesToal)
                ) && 
                (
                    this.Fees == other.Fees ||
                    this.Fees != null &&
                    this.Fees.Equals(other.Fees)
                ) && 
                (
                    this.FeesToal == other.FeesToal ||
                    this.FeesToal != null &&
                    this.FeesToal.Equals(other.FeesToal)
                ) && 
                (
                    this.Packages == other.Packages ||
                    this.Packages != null &&
                    this.Packages.Equals(other.Packages)
                ) && 
                (
                    this.PackageToal == other.PackageToal ||
                    this.PackageToal != null &&
                    this.PackageToal.Equals(other.PackageToal)
                ) && 
                (
                    this.Tickets == other.Tickets ||
                    this.Tickets != null &&
                    this.Tickets.Equals(other.Tickets)
                ) && 
                (
                    this.TicketToal == other.TicketToal ||
                    this.TicketToal != null &&
                    this.TicketToal.Equals(other.TicketToal)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Daterange != null)
                    hash = hash * 59 + this.Daterange.GetHashCode();
                if (this.Accommodations != null)
                    hash = hash * 59 + this.Accommodations.GetHashCode();
                if (this.AccommodationToal != null)
                    hash = hash * 59 + this.AccommodationToal.GetHashCode();
                if (this.Addons != null)
                    hash = hash * 59 + this.Addons.GetHashCode();
                if (this.AddonsToal != null)
                    hash = hash * 59 + this.AddonsToal.GetHashCode();
                if (this.Courses != null)
                    hash = hash * 59 + this.Courses.GetHashCode();
                if (this.CoursesToal != null)
                    hash = hash * 59 + this.CoursesToal.GetHashCode();
                if (this.Fees != null)
                    hash = hash * 59 + this.Fees.GetHashCode();
                if (this.FeesToal != null)
                    hash = hash * 59 + this.FeesToal.GetHashCode();
                if (this.Packages != null)
                    hash = hash * 59 + this.Packages.GetHashCode();
                if (this.PackageToal != null)
                    hash = hash * 59 + this.PackageToal.GetHashCode();
                if (this.Tickets != null)
                    hash = hash * 59 + this.Tickets.GetHashCode();
                if (this.TicketToal != null)
                    hash = hash * 59 + this.TicketToal.GetHashCode();
                return hash;
            }
        }
    }

}
